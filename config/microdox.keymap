/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/mouse.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT 0
#define NAV     1
#define SYM     2
#define SYM2    3
#define NUM     4
#define FN      5
#define CTRL    6

&sk {
    release-after-ms = <10000>;
    quick-release;
};
&lt {
    tapping-term-ms = <200>;
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
    &kp Q     &kp W      &kp E            &kp R     &kp T       &kp Y   &kp U          &kp I         &kp O   &kp P
    &lt NAV A &lt SYM2 S &lt SYM D        &lt NUM F &kp G       &kp H   &kp J          &kp K         &kp L   &kp SEMI
    &kp Z     &kp X      &kp C            &kp V     &kp B       &kp N   &kp M          &kp COMMA     &kp DOT &kp FSLH
                         &mt LALT LS(TAB) &sk LSHFT &kp ESC     &kp RET &lt RGUI SPACE &mt RCTRL TAB
            >;
        };

        nav_layer {
            bindings = <
   &trans &trans         &mmv MOVE_UP   &trans          &trans   &trans   &msc MOVE_DOWN &msc MOVE_UP &trans    &trans
   &trans &mmv MOVE_LEFT &mmv MOVE_DOWN &mmv MOVE_RIGHT &trans   &kp LEFT &kp DOWN       &kp UP       &kp RIGHT &trans
   &trans &trans         &trans         &trans          &trans   &trans   &kp END        &kp HOME     &trans    &trans
                         &trans         &mkp LCLK       &trans   &trans   &mkp RCLK      &trans
            >;
        };

        sym_layer {
            bindings = <
   &trans &trans   &trans &trans &trans   &kp CARET &kp AMPS  &kp ASTRK &kp PRCNT &kp EXCL 
   &trans &mo CTRL &trans &trans &trans   &kp MINUS &kp EQUAL &kp AT    &kp HASH  &kp PIPE
   &trans &trans   &trans &trans &trans   &kp UNDER &kp PLUS  &kp CARET &kp DLLR  &kp BSLH
                   &trans &trans &trans   &trans    &trans    &trans
            >;
        };

        sym_layer_2 {
            bindings = <
   &trans &trans &trans   &trans &trans   &trans &kp LBKT &kp RBKT &kp AT    &trans
   &trans &trans &mo CTRL &mo FN &trans   &trans &kp LPAR &kp RPAR &kp TILDE &kp GRAVE
   &trans &trans &trans   &trans &trans   &trans &kp LBRC &kp RBRC &kp LT    &kp GT
                 &trans   &trans &trans   &trans &trans   &trans
            >;
        };

        num_layer {
            bindings = <
   &trans &trans &trans &trans &trans    &trans &kp N7 &kp N8 &kp N9 &trans
   &trans &mo FN &trans &trans &trans    &trans &kp N4 &kp N5 &kp N6 &trans
   &trans &trans &trans &trans &trans    &kp N0 &kp N1 &kp N2 &kp N3 &trans
                 &trans &trans &trans    &trans &trans &trans
            >;
        };

        f_layer {
            bindings = <
   &trans &trans &trans &trans &trans    &trans &kp F7 &kp F8 &kp F9 &trans
   &trans &trans &trans &trans &trans    &trans &kp F4 &kp F5 &kp F6 &trans
   &trans &trans &trans &trans &trans    &trans &kp F1 &kp F2 &kp F3 &trans
                 &trans &trans &trans    &trans &kp F0 &trans
            >;
        };

        control_layer {
            bindings = <
   &trans &trans &trans     &trans &bootloader   &bootloader &kp C_BRI_DN &kp C_BRI_UP &trans       &bt BT_CLR
   &trans &trans &trans     &trans &trans        &trans      &kp C_NEXT   &kp C_PREV   &kp C_PP     &bt BT_NXT
   &trans &trans &trans     &trans &trans        &trans      &kp C_MUTE   &kp C_VOL_DN &kp C_VOL_UP &out OUT_TOG
                 &sys_reset &trans &trans        &trans      &trans       &sys_reset
            >;
        };
    };
};
